const kws=["await","break","case","catch","class","const","continue","debugger","default","delete","do","else","enum","export","extends","finally","for","function","if","implements","import","in","instanceof","interface","let","new","package","private","protected","public","return","super","switch","static","this","throw","try","true","typeof","var","void","while","with","yield","of"],definition=["let","var","const","function"],operators=["+","-","*","/","%","=","!",">","<","&","|","?",":"],brackets=["(",")","{","}","[","]"],quotes=["'",'"',"`"],comments={"//":"\n","/*":"*/"},punctuation=[".",",",";"],literals=["null","undefined","NaN","false","true"];function toColor(e=""){let n="",t="",s={comment:!1,definition:!1,string:!1,property:!1};e+="\n";for(let o in e){o=+o;let i=e[o],c=0===o?null:e[o-1];if(s.comment){let e=comments[s.comment];(c+i).includes(e)?(s.comment=!1,n+=`${i}</span>`):n+=i}else s.string?s.string===i&&"\\"!==c?(s.string=!1,n+=`${i}</span>`):n+=i:([...operators,...brackets,...quotes,...punctuation," ","\n"].includes(i)&&(kws.includes(t)?n+=`<span class="code__keyword">${t}</span>`:s.definition?n+=`<span class="code__definition">${t}</span>`:s.property?n+=`<span class="code__property">${t}</span>`:!isNaN(t)||literals.includes(t)?n+=`<span class="code__number">${t}</span>`:""!==t&&(n+=`<span class="code__variable">${t}</span>`),s.definition=definition.includes(t),s.property=!1,t=""),quotes.includes(i)?(n+=`<span class="code_string">${i}`,s.string=i):["//","/*"].includes(c+i)?(n+=`<span class="code__comment">${c+i}`,s.comment=c+i):operators.includes(i)?void 0===comments[i+e[o+1]]&&(n+=`<span class="code__operator">${i}</span>`):[...brackets,...punctuation,"\n"," "].includes(i)?("."===i&&(s.property=!0),n+=i):t+=i)}return n.trim()}for(let e of document.querySelectorAll(".code__code"))e.innerHTML=toColor(e.innerHTML.replaceAll("\\n","\n"));